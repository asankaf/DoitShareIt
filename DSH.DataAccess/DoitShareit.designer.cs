#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DSH.DataAccess
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DoitShareit")]
	public partial class DoitShareitDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBadge(Badge instance);
    partial void UpdateBadge(Badge instance);
    partial void DeleteBadge(Badge instance);
    partial void InsertNotification(Notification instance);
    partial void UpdateNotification(Notification instance);
    partial void DeleteNotification(Notification instance);
    partial void InsertPostFeedback(PostFeedback instance);
    partial void UpdatePostFeedback(PostFeedback instance);
    partial void DeletePostFeedback(PostFeedback instance);
    partial void InsertPostHistory(PostHistory instance);
    partial void UpdatePostHistory(PostHistory instance);
    partial void DeletePostHistory(PostHistory instance);
    partial void InsertPostHistoryType(PostHistoryType instance);
    partial void UpdatePostHistoryType(PostHistoryType instance);
    partial void DeletePostHistoryType(PostHistoryType instance);
    partial void InsertPost(Post instance);
    partial void UpdatePost(Post instance);
    partial void DeletePost(Post instance);
    partial void InsertPostType(PostType instance);
    partial void UpdatePostType(PostType instance);
    partial void DeletePostType(PostType instance);
    partial void InsertSuggestedEdit(SuggestedEdit instance);
    partial void UpdateSuggestedEdit(SuggestedEdit instance);
    partial void DeleteSuggestedEdit(SuggestedEdit instance);
    partial void InsertSuggestedEditVote(SuggestedEditVote instance);
    partial void UpdateSuggestedEditVote(SuggestedEditVote instance);
    partial void DeleteSuggestedEditVote(SuggestedEditVote instance);
    partial void InsertTag(Tag instance);
    partial void UpdateTag(Tag instance);
    partial void DeleteTag(Tag instance);
    partial void InsertTagSynonym(TagSynonym instance);
    partial void UpdateTagSynonym(TagSynonym instance);
    partial void DeleteTagSynonym(TagSynonym instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertVote(Vote instance);
    partial void UpdateVote(Vote instance);
    partial void DeleteVote(Vote instance);
    partial void InsertVoteType(VoteType instance);
    partial void UpdateVoteType(VoteType instance);
    partial void DeleteVoteType(VoteType instance);
    #endregion
		
		public DoitShareitDataContext() : 
				base(global::DSH.DataAccess.Properties.Settings.Default.DoitShareitConnectionString5, mappingSource)
		{
			OnCreated();
		}
		
		public DoitShareitDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DoitShareitDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DoitShareitDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DoitShareitDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Badge> Badges
		{
			get
			{
				return this.GetTable<Badge>();
			}
		}
		
		public System.Data.Linq.Table<Notification> Notifications
		{
			get
			{
				return this.GetTable<Notification>();
			}
		}
		
		public System.Data.Linq.Table<PostFeedback> PostFeedbacks
		{
			get
			{
				return this.GetTable<PostFeedback>();
			}
		}
		
		public System.Data.Linq.Table<PostHistory> PostHistories
		{
			get
			{
				return this.GetTable<PostHistory>();
			}
		}
		
		public System.Data.Linq.Table<PostHistoryType> PostHistoryTypes
		{
			get
			{
				return this.GetTable<PostHistoryType>();
			}
		}
		
		public System.Data.Linq.Table<Post> Posts
		{
			get
			{
				return this.GetTable<Post>();
			}
		}
		
		public System.Data.Linq.Table<PostTag> PostTags
		{
			get
			{
				return this.GetTable<PostTag>();
			}
		}
		
		public System.Data.Linq.Table<PostType> PostTypes
		{
			get
			{
				return this.GetTable<PostType>();
			}
		}
		
		public System.Data.Linq.Table<SuggestedEdit> SuggestedEdits
		{
			get
			{
				return this.GetTable<SuggestedEdit>();
			}
		}
		
		public System.Data.Linq.Table<SuggestedEditVote> SuggestedEditVotes
		{
			get
			{
				return this.GetTable<SuggestedEditVote>();
			}
		}
		
		public System.Data.Linq.Table<Tag> Tags
		{
			get
			{
				return this.GetTable<Tag>();
			}
		}
		
		public System.Data.Linq.Table<TagSynonym> TagSynonyms
		{
			get
			{
				return this.GetTable<TagSynonym>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<Vote> Votes
		{
			get
			{
				return this.GetTable<Vote>();
			}
		}
		
		public System.Data.Linq.Table<VoteType> VoteTypes
		{
			get
			{
				return this.GetTable<VoteType>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Badges")]
	public partial class Badge : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _UserId;
		
		private string _Name;
		
		private System.Nullable<System.DateTime> _CreationDate;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(System.Nullable<int> value);
    partial void OnUserIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreationDateChanged();
    #endregion
		
		public Badge()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int")]
		public System.Nullable<int> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Badge", Storage="_User", ThisKey="Id", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Badge = null;
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Badge = this;
						this._Id = value.Id;
					}
					else
					{
						this._Id = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Notifications")]
	public partial class Notification : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _SenderId;
		
		private System.Nullable<int> _RecipientId;
		
		private string _Body;
		
		private System.Nullable<int> _RelevantParentPostId;
		
		private System.Nullable<int> _RelevantPostId;
		
		private System.Nullable<bool> _IsRead;
		
		private System.Nullable<System.DateTime> _DateOfOrigin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSenderIdChanging(System.Nullable<int> value);
    partial void OnSenderIdChanged();
    partial void OnRecipientIdChanging(System.Nullable<int> value);
    partial void OnRecipientIdChanged();
    partial void OnBodyChanging(string value);
    partial void OnBodyChanged();
    partial void OnRelevantParentPostIdChanging(System.Nullable<int> value);
    partial void OnRelevantParentPostIdChanged();
    partial void OnRelevantPostIdChanging(System.Nullable<int> value);
    partial void OnRelevantPostIdChanged();
    partial void OnIsReadChanging(System.Nullable<bool> value);
    partial void OnIsReadChanged();
    partial void OnDateOfOriginChanging(System.Nullable<System.DateTime> value);
    partial void OnDateOfOriginChanged();
    #endregion
		
		public Notification()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SenderId", DbType="Int")]
		public System.Nullable<int> SenderId
		{
			get
			{
				return this._SenderId;
			}
			set
			{
				if ((this._SenderId != value))
				{
					this.OnSenderIdChanging(value);
					this.SendPropertyChanging();
					this._SenderId = value;
					this.SendPropertyChanged("SenderId");
					this.OnSenderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecipientId", DbType="Int")]
		public System.Nullable<int> RecipientId
		{
			get
			{
				return this._RecipientId;
			}
			set
			{
				if ((this._RecipientId != value))
				{
					this.OnRecipientIdChanging(value);
					this.SendPropertyChanging();
					this._RecipientId = value;
					this.SendPropertyChanged("RecipientId");
					this.OnRecipientIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Body", DbType="VarChar(500)")]
		public string Body
		{
			get
			{
				return this._Body;
			}
			set
			{
				if ((this._Body != value))
				{
					this.OnBodyChanging(value);
					this.SendPropertyChanging();
					this._Body = value;
					this.SendPropertyChanged("Body");
					this.OnBodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RelevantParentPostId", DbType="Int")]
		public System.Nullable<int> RelevantParentPostId
		{
			get
			{
				return this._RelevantParentPostId;
			}
			set
			{
				if ((this._RelevantParentPostId != value))
				{
					this.OnRelevantParentPostIdChanging(value);
					this.SendPropertyChanging();
					this._RelevantParentPostId = value;
					this.SendPropertyChanged("RelevantParentPostId");
					this.OnRelevantParentPostIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RelevantPostId", DbType="Int")]
		public System.Nullable<int> RelevantPostId
		{
			get
			{
				return this._RelevantPostId;
			}
			set
			{
				if ((this._RelevantPostId != value))
				{
					this.OnRelevantPostIdChanging(value);
					this.SendPropertyChanging();
					this._RelevantPostId = value;
					this.SendPropertyChanged("RelevantPostId");
					this.OnRelevantPostIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRead", DbType="Bit")]
		public System.Nullable<bool> IsRead
		{
			get
			{
				return this._IsRead;
			}
			set
			{
				if ((this._IsRead != value))
				{
					this.OnIsReadChanging(value);
					this.SendPropertyChanging();
					this._IsRead = value;
					this.SendPropertyChanged("IsRead");
					this.OnIsReadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfOrigin", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateOfOrigin
		{
			get
			{
				return this._DateOfOrigin;
			}
			set
			{
				if ((this._DateOfOrigin != value))
				{
					this.OnDateOfOriginChanging(value);
					this.SendPropertyChanging();
					this._DateOfOrigin = value;
					this.SendPropertyChanged("DateOfOrigin");
					this.OnDateOfOriginChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PostFeedback")]
	public partial class PostFeedback : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _PostId;
		
		private System.Nullable<bool> _IsAnonymous;
		
		private System.Nullable<int> _VoteTypeId;
		
		private System.Nullable<System.DateTime> _CreationDate;
		
		private EntityRef<Post> _Post;
		
		private EntityRef<VoteType> _VoteType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPostIdChanging(System.Nullable<int> value);
    partial void OnPostIdChanged();
    partial void OnIsAnonymousChanging(System.Nullable<bool> value);
    partial void OnIsAnonymousChanged();
    partial void OnVoteTypeIdChanging(System.Nullable<int> value);
    partial void OnVoteTypeIdChanged();
    partial void OnCreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreationDateChanged();
    #endregion
		
		public PostFeedback()
		{
			this._Post = default(EntityRef<Post>);
			this._VoteType = default(EntityRef<VoteType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostId", DbType="Int")]
		public System.Nullable<int> PostId
		{
			get
			{
				return this._PostId;
			}
			set
			{
				if ((this._PostId != value))
				{
					if (this._Post.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPostIdChanging(value);
					this.SendPropertyChanging();
					this._PostId = value;
					this.SendPropertyChanged("PostId");
					this.OnPostIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAnonymous", DbType="Bit")]
		public System.Nullable<bool> IsAnonymous
		{
			get
			{
				return this._IsAnonymous;
			}
			set
			{
				if ((this._IsAnonymous != value))
				{
					this.OnIsAnonymousChanging(value);
					this.SendPropertyChanging();
					this._IsAnonymous = value;
					this.SendPropertyChanged("IsAnonymous");
					this.OnIsAnonymousChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoteTypeId", DbType="Int")]
		public System.Nullable<int> VoteTypeId
		{
			get
			{
				return this._VoteTypeId;
			}
			set
			{
				if ((this._VoteTypeId != value))
				{
					if (this._VoteType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVoteTypeIdChanging(value);
					this.SendPropertyChanging();
					this._VoteTypeId = value;
					this.SendPropertyChanged("VoteTypeId");
					this.OnVoteTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Post_PostFeedback", Storage="_Post", ThisKey="PostId", OtherKey="Id", IsForeignKey=true)]
		public Post Post
		{
			get
			{
				return this._Post.Entity;
			}
			set
			{
				Post previousValue = this._Post.Entity;
				if (((previousValue != value) 
							|| (this._Post.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Post.Entity = null;
						previousValue.PostFeedbacks.Remove(this);
					}
					this._Post.Entity = value;
					if ((value != null))
					{
						value.PostFeedbacks.Add(this);
						this._PostId = value.Id;
					}
					else
					{
						this._PostId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Post");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VoteType_PostFeedback", Storage="_VoteType", ThisKey="VoteTypeId", OtherKey="Id", IsForeignKey=true)]
		public VoteType VoteType
		{
			get
			{
				return this._VoteType.Entity;
			}
			set
			{
				VoteType previousValue = this._VoteType.Entity;
				if (((previousValue != value) 
							|| (this._VoteType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VoteType.Entity = null;
						previousValue.PostFeedbacks.Remove(this);
					}
					this._VoteType.Entity = value;
					if ((value != null))
					{
						value.PostFeedbacks.Add(this);
						this._VoteTypeId = value.Id;
					}
					else
					{
						this._VoteTypeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("VoteType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PostHistory")]
	public partial class PostHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<byte> _PostHistoryTypeId;
		
		private System.Nullable<int> _Postid;
		
		private System.Nullable<System.Guid> _RevisionGUID;
		
		private System.Nullable<System.DateTime> _CreationDate;
		
		private System.Nullable<int> _UserId;
		
		private string _UserDisplayName;
		
		private string _Comment;
		
		private string _Text;
		
		private EntityRef<PostHistoryType> _PostHistoryType;
		
		private EntityRef<Post> _Post;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPostHistoryTypeIdChanging(System.Nullable<byte> value);
    partial void OnPostHistoryTypeIdChanged();
    partial void OnPostidChanging(System.Nullable<int> value);
    partial void OnPostidChanged();
    partial void OnRevisionGUIDChanging(System.Nullable<System.Guid> value);
    partial void OnRevisionGUIDChanged();
    partial void OnCreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreationDateChanged();
    partial void OnUserIdChanging(System.Nullable<int> value);
    partial void OnUserIdChanged();
    partial void OnUserDisplayNameChanging(string value);
    partial void OnUserDisplayNameChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnTextChanging(string value);
    partial void OnTextChanged();
    #endregion
		
		public PostHistory()
		{
			this._PostHistoryType = default(EntityRef<PostHistoryType>);
			this._Post = default(EntityRef<Post>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostHistoryTypeId", DbType="TinyInt")]
		public System.Nullable<byte> PostHistoryTypeId
		{
			get
			{
				return this._PostHistoryTypeId;
			}
			set
			{
				if ((this._PostHistoryTypeId != value))
				{
					if (this._PostHistoryType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPostHistoryTypeIdChanging(value);
					this.SendPropertyChanging();
					this._PostHistoryTypeId = value;
					this.SendPropertyChanged("PostHistoryTypeId");
					this.OnPostHistoryTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Postid", DbType="Int")]
		public System.Nullable<int> Postid
		{
			get
			{
				return this._Postid;
			}
			set
			{
				if ((this._Postid != value))
				{
					if (this._Post.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPostidChanging(value);
					this.SendPropertyChanging();
					this._Postid = value;
					this.SendPropertyChanged("Postid");
					this.OnPostidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RevisionGUID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> RevisionGUID
		{
			get
			{
				return this._RevisionGUID;
			}
			set
			{
				if ((this._RevisionGUID != value))
				{
					this.OnRevisionGUIDChanging(value);
					this.SendPropertyChanging();
					this._RevisionGUID = value;
					this.SendPropertyChanged("RevisionGUID");
					this.OnRevisionGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int")]
		public System.Nullable<int> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserDisplayName", DbType="NVarChar(40)")]
		public string UserDisplayName
		{
			get
			{
				return this._UserDisplayName;
			}
			set
			{
				if ((this._UserDisplayName != value))
				{
					this.OnUserDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._UserDisplayName = value;
					this.SendPropertyChanged("UserDisplayName");
					this.OnUserDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(40)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Text", DbType="NVarChar(MAX)")]
		public string Text
		{
			get
			{
				return this._Text;
			}
			set
			{
				if ((this._Text != value))
				{
					this.OnTextChanging(value);
					this.SendPropertyChanging();
					this._Text = value;
					this.SendPropertyChanged("Text");
					this.OnTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PostHistoryType_PostHistory", Storage="_PostHistoryType", ThisKey="PostHistoryTypeId", OtherKey="Id", IsForeignKey=true)]
		public PostHistoryType PostHistoryType
		{
			get
			{
				return this._PostHistoryType.Entity;
			}
			set
			{
				PostHistoryType previousValue = this._PostHistoryType.Entity;
				if (((previousValue != value) 
							|| (this._PostHistoryType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PostHistoryType.Entity = null;
						previousValue.PostHistories.Remove(this);
					}
					this._PostHistoryType.Entity = value;
					if ((value != null))
					{
						value.PostHistories.Add(this);
						this._PostHistoryTypeId = value.Id;
					}
					else
					{
						this._PostHistoryTypeId = default(Nullable<byte>);
					}
					this.SendPropertyChanged("PostHistoryType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Post_PostHistory", Storage="_Post", ThisKey="Postid", OtherKey="Id", IsForeignKey=true)]
		public Post Post
		{
			get
			{
				return this._Post.Entity;
			}
			set
			{
				Post previousValue = this._Post.Entity;
				if (((previousValue != value) 
							|| (this._Post.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Post.Entity = null;
						previousValue.PostHistories.Remove(this);
					}
					this._Post.Entity = value;
					if ((value != null))
					{
						value.PostHistories.Add(this);
						this._Postid = value.Id;
					}
					else
					{
						this._Postid = default(Nullable<int>);
					}
					this.SendPropertyChanged("Post");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_PostHistory", Storage="_User", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.PostHistories.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.PostHistories.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PostHistoryTypes")]
	public partial class PostHistoryType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _Id;
		
		private string _Name;
		
		private EntitySet<PostHistory> _PostHistories;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(byte value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public PostHistoryType()
		{
			this._PostHistories = new EntitySet<PostHistory>(new Action<PostHistory>(this.attach_PostHistories), new Action<PostHistory>(this.detach_PostHistories));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="TinyInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public byte Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PostHistoryType_PostHistory", Storage="_PostHistories", ThisKey="Id", OtherKey="PostHistoryTypeId")]
		public EntitySet<PostHistory> PostHistories
		{
			get
			{
				return this._PostHistories;
			}
			set
			{
				this._PostHistories.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PostHistories(PostHistory entity)
		{
			this.SendPropertyChanging();
			entity.PostHistoryType = this;
		}
		
		private void detach_PostHistories(PostHistory entity)
		{
			this.SendPropertyChanging();
			entity.PostHistoryType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Posts")]
	public partial class Post : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _PostTypeId;
		
		private System.Nullable<System.DateTime> _CreationDate;
		
		private System.Nullable<int> _Score;
		
		private System.Nullable<int> _ViewCount;
		
		private string _Body;
		
		private System.Nullable<int> _OwnerUserId;
		
		private string _OwnerDisplayName;
		
		private System.Nullable<int> _LastEditorUserId;
		
		private string _LastEditorDisplayName;
		
		private System.Nullable<System.DateTime> _LastEditDate;
		
		private System.Nullable<System.DateTime> _LastActivityDate;
		
		private string _Title;
		
		private string _Tags;
		
		private System.Nullable<int> _CommentCount;
		
		private System.Nullable<int> _FavoriteCount;
		
		private System.Nullable<System.DateTime> _ClosedDate;
		
		private System.Nullable<int> _ParentId;
		
		private System.Nullable<System.DateTime> _CommunityOwnedDate;
		
		private System.Nullable<bool> _IsAnonymous;
		
		private System.Nullable<int> _TaggedUserId;
		
		private EntitySet<PostFeedback> _PostFeedbacks;
		
		private EntitySet<PostHistory> _PostHistories;
		
		private EntityRef<Tag> _Tag;
		
		private EntitySet<Vote> _Votes;
		
		private EntityRef<PostType> _PostType;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _User1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPostTypeIdChanging(System.Nullable<int> value);
    partial void OnPostTypeIdChanged();
    partial void OnCreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreationDateChanged();
    partial void OnScoreChanging(System.Nullable<int> value);
    partial void OnScoreChanged();
    partial void OnViewCountChanging(System.Nullable<int> value);
    partial void OnViewCountChanged();
    partial void OnBodyChanging(string value);
    partial void OnBodyChanged();
    partial void OnOwnerUserIdChanging(System.Nullable<int> value);
    partial void OnOwnerUserIdChanged();
    partial void OnOwnerDisplayNameChanging(string value);
    partial void OnOwnerDisplayNameChanged();
    partial void OnLastEditorUserIdChanging(System.Nullable<int> value);
    partial void OnLastEditorUserIdChanged();
    partial void OnLastEditorDisplayNameChanging(string value);
    partial void OnLastEditorDisplayNameChanged();
    partial void OnLastEditDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastEditDateChanged();
    partial void OnLastActivityDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastActivityDateChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnTagsChanging(string value);
    partial void OnTagsChanged();
    partial void OnCommentCountChanging(System.Nullable<int> value);
    partial void OnCommentCountChanged();
    partial void OnFavoriteCountChanging(System.Nullable<int> value);
    partial void OnFavoriteCountChanged();
    partial void OnClosedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnClosedDateChanged();
    partial void OnParentIdChanging(System.Nullable<int> value);
    partial void OnParentIdChanged();
    partial void OnCommunityOwnedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCommunityOwnedDateChanged();
    partial void OnIsAnonymousChanging(System.Nullable<bool> value);
    partial void OnIsAnonymousChanged();
    partial void OnTaggedUserIdChanging(System.Nullable<int> value);
    partial void OnTaggedUserIdChanged();
    #endregion
		
		public Post()
		{
			this._PostFeedbacks = new EntitySet<PostFeedback>(new Action<PostFeedback>(this.attach_PostFeedbacks), new Action<PostFeedback>(this.detach_PostFeedbacks));
			this._PostHistories = new EntitySet<PostHistory>(new Action<PostHistory>(this.attach_PostHistories), new Action<PostHistory>(this.detach_PostHistories));
			this._Tag = default(EntityRef<Tag>);
			this._Votes = new EntitySet<Vote>(new Action<Vote>(this.attach_Votes), new Action<Vote>(this.detach_Votes));
			this._PostType = default(EntityRef<PostType>);
			this._User = default(EntityRef<User>);
			this._User1 = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostTypeId", DbType="Int")]
		public System.Nullable<int> PostTypeId
		{
			get
			{
				return this._PostTypeId;
			}
			set
			{
				if ((this._PostTypeId != value))
				{
					if (this._PostType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPostTypeIdChanging(value);
					this.SendPropertyChanging();
					this._PostTypeId = value;
					this.SendPropertyChanged("PostTypeId");
					this.OnPostTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Score", DbType="Int")]
		public System.Nullable<int> Score
		{
			get
			{
				return this._Score;
			}
			set
			{
				if ((this._Score != value))
				{
					this.OnScoreChanging(value);
					this.SendPropertyChanging();
					this._Score = value;
					this.SendPropertyChanged("Score");
					this.OnScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViewCount", DbType="Int")]
		public System.Nullable<int> ViewCount
		{
			get
			{
				return this._ViewCount;
			}
			set
			{
				if ((this._ViewCount != value))
				{
					this.OnViewCountChanging(value);
					this.SendPropertyChanging();
					this._ViewCount = value;
					this.SendPropertyChanged("ViewCount");
					this.OnViewCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Body", DbType="NVarChar(MAX)")]
		public string Body
		{
			get
			{
				return this._Body;
			}
			set
			{
				if ((this._Body != value))
				{
					this.OnBodyChanging(value);
					this.SendPropertyChanging();
					this._Body = value;
					this.SendPropertyChanged("Body");
					this.OnBodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerUserId", DbType="Int")]
		public System.Nullable<int> OwnerUserId
		{
			get
			{
				return this._OwnerUserId;
			}
			set
			{
				if ((this._OwnerUserId != value))
				{
					if (this._User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOwnerUserIdChanging(value);
					this.SendPropertyChanging();
					this._OwnerUserId = value;
					this.SendPropertyChanged("OwnerUserId");
					this.OnOwnerUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerDisplayName", DbType="NVarChar(40)")]
		public string OwnerDisplayName
		{
			get
			{
				return this._OwnerDisplayName;
			}
			set
			{
				if ((this._OwnerDisplayName != value))
				{
					this.OnOwnerDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._OwnerDisplayName = value;
					this.SendPropertyChanged("OwnerDisplayName");
					this.OnOwnerDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastEditorUserId", DbType="Int")]
		public System.Nullable<int> LastEditorUserId
		{
			get
			{
				return this._LastEditorUserId;
			}
			set
			{
				if ((this._LastEditorUserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLastEditorUserIdChanging(value);
					this.SendPropertyChanging();
					this._LastEditorUserId = value;
					this.SendPropertyChanged("LastEditorUserId");
					this.OnLastEditorUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastEditorDisplayName", DbType="NVarChar(40)")]
		public string LastEditorDisplayName
		{
			get
			{
				return this._LastEditorDisplayName;
			}
			set
			{
				if ((this._LastEditorDisplayName != value))
				{
					this.OnLastEditorDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._LastEditorDisplayName = value;
					this.SendPropertyChanged("LastEditorDisplayName");
					this.OnLastEditorDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastEditDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastEditDate
		{
			get
			{
				return this._LastEditDate;
			}
			set
			{
				if ((this._LastEditDate != value))
				{
					this.OnLastEditDateChanging(value);
					this.SendPropertyChanging();
					this._LastEditDate = value;
					this.SendPropertyChanged("LastEditDate");
					this.OnLastEditDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastActivityDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastActivityDate
		{
			get
			{
				return this._LastActivityDate;
			}
			set
			{
				if ((this._LastActivityDate != value))
				{
					this.OnLastActivityDateChanging(value);
					this.SendPropertyChanging();
					this._LastActivityDate = value;
					this.SendPropertyChanged("LastActivityDate");
					this.OnLastActivityDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(250)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tags", DbType="NVarChar(150)")]
		public string Tags
		{
			get
			{
				return this._Tags;
			}
			set
			{
				if ((this._Tags != value))
				{
					this.OnTagsChanging(value);
					this.SendPropertyChanging();
					this._Tags = value;
					this.SendPropertyChanged("Tags");
					this.OnTagsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommentCount", DbType="Int")]
		public System.Nullable<int> CommentCount
		{
			get
			{
				return this._CommentCount;
			}
			set
			{
				if ((this._CommentCount != value))
				{
					this.OnCommentCountChanging(value);
					this.SendPropertyChanging();
					this._CommentCount = value;
					this.SendPropertyChanged("CommentCount");
					this.OnCommentCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FavoriteCount", DbType="Int")]
		public System.Nullable<int> FavoriteCount
		{
			get
			{
				return this._FavoriteCount;
			}
			set
			{
				if ((this._FavoriteCount != value))
				{
					this.OnFavoriteCountChanging(value);
					this.SendPropertyChanging();
					this._FavoriteCount = value;
					this.SendPropertyChanged("FavoriteCount");
					this.OnFavoriteCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClosedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ClosedDate
		{
			get
			{
				return this._ClosedDate;
			}
			set
			{
				if ((this._ClosedDate != value))
				{
					this.OnClosedDateChanging(value);
					this.SendPropertyChanging();
					this._ClosedDate = value;
					this.SendPropertyChanged("ClosedDate");
					this.OnClosedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentId", DbType="Int")]
		public System.Nullable<int> ParentId
		{
			get
			{
				return this._ParentId;
			}
			set
			{
				if ((this._ParentId != value))
				{
					this.OnParentIdChanging(value);
					this.SendPropertyChanging();
					this._ParentId = value;
					this.SendPropertyChanged("ParentId");
					this.OnParentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommunityOwnedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CommunityOwnedDate
		{
			get
			{
				return this._CommunityOwnedDate;
			}
			set
			{
				if ((this._CommunityOwnedDate != value))
				{
					this.OnCommunityOwnedDateChanging(value);
					this.SendPropertyChanging();
					this._CommunityOwnedDate = value;
					this.SendPropertyChanged("CommunityOwnedDate");
					this.OnCommunityOwnedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAnonymous", DbType="Bit")]
		public System.Nullable<bool> IsAnonymous
		{
			get
			{
				return this._IsAnonymous;
			}
			set
			{
				if ((this._IsAnonymous != value))
				{
					this.OnIsAnonymousChanging(value);
					this.SendPropertyChanging();
					this._IsAnonymous = value;
					this.SendPropertyChanged("IsAnonymous");
					this.OnIsAnonymousChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaggedUserId", DbType="Int")]
		public System.Nullable<int> TaggedUserId
		{
			get
			{
				return this._TaggedUserId;
			}
			set
			{
				if ((this._TaggedUserId != value))
				{
					this.OnTaggedUserIdChanging(value);
					this.SendPropertyChanging();
					this._TaggedUserId = value;
					this.SendPropertyChanged("TaggedUserId");
					this.OnTaggedUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Post_PostFeedback", Storage="_PostFeedbacks", ThisKey="Id", OtherKey="PostId")]
		public EntitySet<PostFeedback> PostFeedbacks
		{
			get
			{
				return this._PostFeedbacks;
			}
			set
			{
				this._PostFeedbacks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Post_PostHistory", Storage="_PostHistories", ThisKey="Id", OtherKey="Postid")]
		public EntitySet<PostHistory> PostHistories
		{
			get
			{
				return this._PostHistories;
			}
			set
			{
				this._PostHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Post_Tag", Storage="_Tag", ThisKey="Id", OtherKey="Id", IsUnique=true, IsForeignKey=false)]
		public Tag Tag
		{
			get
			{
				return this._Tag.Entity;
			}
			set
			{
				Tag previousValue = this._Tag.Entity;
				if (((previousValue != value) 
							|| (this._Tag.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tag.Entity = null;
						previousValue.Post = null;
					}
					this._Tag.Entity = value;
					if ((value != null))
					{
						value.Post = this;
					}
					this.SendPropertyChanged("Tag");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Post_Vote", Storage="_Votes", ThisKey="Id", OtherKey="PostId")]
		public EntitySet<Vote> Votes
		{
			get
			{
				return this._Votes;
			}
			set
			{
				this._Votes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PostType_Post", Storage="_PostType", ThisKey="PostTypeId", OtherKey="Id", IsForeignKey=true)]
		public PostType PostType
		{
			get
			{
				return this._PostType.Entity;
			}
			set
			{
				PostType previousValue = this._PostType.Entity;
				if (((previousValue != value) 
							|| (this._PostType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PostType.Entity = null;
						previousValue.Posts.Remove(this);
					}
					this._PostType.Entity = value;
					if ((value != null))
					{
						value.Posts.Add(this);
						this._PostTypeId = value.Id;
					}
					else
					{
						this._PostTypeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("PostType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Post", Storage="_User", ThisKey="LastEditorUserId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Posts.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Posts.Add(this);
						this._LastEditorUserId = value.Id;
					}
					else
					{
						this._LastEditorUserId = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Post1", Storage="_User1", ThisKey="OwnerUserId", OtherKey="Id", IsForeignKey=true)]
		public User User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.Posts1.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.Posts1.Add(this);
						this._OwnerUserId = value.Id;
					}
					else
					{
						this._OwnerUserId = default(Nullable<int>);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PostFeedbacks(PostFeedback entity)
		{
			this.SendPropertyChanging();
			entity.Post = this;
		}
		
		private void detach_PostFeedbacks(PostFeedback entity)
		{
			this.SendPropertyChanging();
			entity.Post = null;
		}
		
		private void attach_PostHistories(PostHistory entity)
		{
			this.SendPropertyChanging();
			entity.Post = this;
		}
		
		private void detach_PostHistories(PostHistory entity)
		{
			this.SendPropertyChanging();
			entity.Post = null;
		}
		
		private void attach_Votes(Vote entity)
		{
			this.SendPropertyChanging();
			entity.Post = this;
		}
		
		private void detach_Votes(Vote entity)
		{
			this.SendPropertyChanging();
			entity.Post = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PostTags")]
	public partial class PostTag
	{
		
		private System.Nullable<int> _PostId;
		
		private System.Nullable<int> _TagId;
		
		public PostTag()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostId", DbType="Int")]
		public System.Nullable<int> PostId
		{
			get
			{
				return this._PostId;
			}
			set
			{
				if ((this._PostId != value))
				{
					this._PostId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TagId", DbType="Int")]
		public System.Nullable<int> TagId
		{
			get
			{
				return this._TagId;
			}
			set
			{
				if ((this._TagId != value))
				{
					this._TagId = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PostTypes")]
	public partial class PostType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private EntitySet<Post> _Posts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public PostType()
		{
			this._Posts = new EntitySet<Post>(new Action<Post>(this.attach_Posts), new Action<Post>(this.detach_Posts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PostType_Post", Storage="_Posts", ThisKey="Id", OtherKey="PostTypeId")]
		public EntitySet<Post> Posts
		{
			get
			{
				return this._Posts;
			}
			set
			{
				this._Posts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Posts(Post entity)
		{
			this.SendPropertyChanging();
			entity.PostType = this;
		}
		
		private void detach_Posts(Post entity)
		{
			this.SendPropertyChanging();
			entity.PostType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SuggestedEdits")]
	public partial class SuggestedEdit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _PostId;
		
		private System.Nullable<System.DateTime> _CreationDate;
		
		private System.Nullable<System.DateTime> _ApprovalDate;
		
		private System.Nullable<System.DateTime> _RejectionDate;
		
		private System.Nullable<int> _OwnerUserId;
		
		private string _Comment;
		
		private string _Text;
		
		private string _Title;
		
		private string _Tags;
		
		private System.Nullable<System.Guid> _RevisionGUID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPostIdChanging(System.Nullable<int> value);
    partial void OnPostIdChanged();
    partial void OnCreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreationDateChanged();
    partial void OnApprovalDateChanging(System.Nullable<System.DateTime> value);
    partial void OnApprovalDateChanged();
    partial void OnRejectionDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRejectionDateChanged();
    partial void OnOwnerUserIdChanging(System.Nullable<int> value);
    partial void OnOwnerUserIdChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnTextChanging(string value);
    partial void OnTextChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnTagsChanging(string value);
    partial void OnTagsChanged();
    partial void OnRevisionGUIDChanging(System.Nullable<System.Guid> value);
    partial void OnRevisionGUIDChanged();
    #endregion
		
		public SuggestedEdit()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostId", DbType="Int")]
		public System.Nullable<int> PostId
		{
			get
			{
				return this._PostId;
			}
			set
			{
				if ((this._PostId != value))
				{
					this.OnPostIdChanging(value);
					this.SendPropertyChanging();
					this._PostId = value;
					this.SendPropertyChanged("PostId");
					this.OnPostIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovalDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ApprovalDate
		{
			get
			{
				return this._ApprovalDate;
			}
			set
			{
				if ((this._ApprovalDate != value))
				{
					this.OnApprovalDateChanging(value);
					this.SendPropertyChanging();
					this._ApprovalDate = value;
					this.SendPropertyChanged("ApprovalDate");
					this.OnApprovalDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RejectionDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RejectionDate
		{
			get
			{
				return this._RejectionDate;
			}
			set
			{
				if ((this._RejectionDate != value))
				{
					this.OnRejectionDateChanging(value);
					this.SendPropertyChanging();
					this._RejectionDate = value;
					this.SendPropertyChanged("RejectionDate");
					this.OnRejectionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerUserId", DbType="Int")]
		public System.Nullable<int> OwnerUserId
		{
			get
			{
				return this._OwnerUserId;
			}
			set
			{
				if ((this._OwnerUserId != value))
				{
					this.OnOwnerUserIdChanging(value);
					this.SendPropertyChanging();
					this._OwnerUserId = value;
					this.SendPropertyChanged("OwnerUserId");
					this.OnOwnerUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(800)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Text", DbType="NVarChar(MAX)")]
		public string Text
		{
			get
			{
				return this._Text;
			}
			set
			{
				if ((this._Text != value))
				{
					this.OnTextChanging(value);
					this.SendPropertyChanging();
					this._Text = value;
					this.SendPropertyChanged("Text");
					this.OnTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(250)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tags", DbType="NVarChar(150)")]
		public string Tags
		{
			get
			{
				return this._Tags;
			}
			set
			{
				if ((this._Tags != value))
				{
					this.OnTagsChanging(value);
					this.SendPropertyChanging();
					this._Tags = value;
					this.SendPropertyChanged("Tags");
					this.OnTagsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RevisionGUID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> RevisionGUID
		{
			get
			{
				return this._RevisionGUID;
			}
			set
			{
				if ((this._RevisionGUID != value))
				{
					this.OnRevisionGUIDChanging(value);
					this.SendPropertyChanging();
					this._RevisionGUID = value;
					this.SendPropertyChanged("RevisionGUID");
					this.OnRevisionGUIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SuggestedEditVotes")]
	public partial class SuggestedEditVote : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _SuggestedEditId;
		
		private System.Nullable<int> _UserId;
		
		private System.Nullable<byte> _VoteTypeId;
		
		private System.Nullable<System.DateTime> _CreationDate;
		
		private System.Nullable<int> _TargetUserId;
		
		private System.Nullable<int> _TargetRepChange;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSuggestedEditIdChanging(System.Nullable<int> value);
    partial void OnSuggestedEditIdChanged();
    partial void OnUserIdChanging(System.Nullable<int> value);
    partial void OnUserIdChanged();
    partial void OnVoteTypeIdChanging(System.Nullable<byte> value);
    partial void OnVoteTypeIdChanged();
    partial void OnCreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreationDateChanged();
    partial void OnTargetUserIdChanging(System.Nullable<int> value);
    partial void OnTargetUserIdChanged();
    partial void OnTargetRepChangeChanging(System.Nullable<int> value);
    partial void OnTargetRepChangeChanged();
    #endregion
		
		public SuggestedEditVote()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SuggestedEditId", DbType="Int")]
		public System.Nullable<int> SuggestedEditId
		{
			get
			{
				return this._SuggestedEditId;
			}
			set
			{
				if ((this._SuggestedEditId != value))
				{
					this.OnSuggestedEditIdChanging(value);
					this.SendPropertyChanging();
					this._SuggestedEditId = value;
					this.SendPropertyChanged("SuggestedEditId");
					this.OnSuggestedEditIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int")]
		public System.Nullable<int> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoteTypeId", DbType="TinyInt")]
		public System.Nullable<byte> VoteTypeId
		{
			get
			{
				return this._VoteTypeId;
			}
			set
			{
				if ((this._VoteTypeId != value))
				{
					this.OnVoteTypeIdChanging(value);
					this.SendPropertyChanging();
					this._VoteTypeId = value;
					this.SendPropertyChanged("VoteTypeId");
					this.OnVoteTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetUserId", DbType="Int")]
		public System.Nullable<int> TargetUserId
		{
			get
			{
				return this._TargetUserId;
			}
			set
			{
				if ((this._TargetUserId != value))
				{
					this.OnTargetUserIdChanging(value);
					this.SendPropertyChanging();
					this._TargetUserId = value;
					this.SendPropertyChanged("TargetUserId");
					this.OnTargetUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetRepChange", DbType="Int")]
		public System.Nullable<int> TargetRepChange
		{
			get
			{
				return this._TargetRepChange;
			}
			set
			{
				if ((this._TargetRepChange != value))
				{
					this.OnTargetRepChangeChanging(value);
					this.SendPropertyChanging();
					this._TargetRepChange = value;
					this.SendPropertyChanged("TargetRepChange");
					this.OnTargetRepChangeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tags")]
	public partial class Tag : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _TagName;
		
		private System.Nullable<int> _Count;
		
		private System.Nullable<int> _ExcerptPostId;
		
		private System.Nullable<int> _WikiPostId;
		
		private EntityRef<Post> _Post;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTagNameChanging(string value);
    partial void OnTagNameChanged();
    partial void OnCountChanging(System.Nullable<int> value);
    partial void OnCountChanged();
    partial void OnExcerptPostIdChanging(System.Nullable<int> value);
    partial void OnExcerptPostIdChanged();
    partial void OnWikiPostIdChanging(System.Nullable<int> value);
    partial void OnWikiPostIdChanged();
    #endregion
		
		public Tag()
		{
			this._Post = default(EntityRef<Post>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					if (this._Post.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TagName", DbType="VarChar(255)")]
		public string TagName
		{
			get
			{
				return this._TagName;
			}
			set
			{
				if ((this._TagName != value))
				{
					this.OnTagNameChanging(value);
					this.SendPropertyChanging();
					this._TagName = value;
					this.SendPropertyChanged("TagName");
					this.OnTagNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count", DbType="Int")]
		public System.Nullable<int> Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExcerptPostId", DbType="Int")]
		public System.Nullable<int> ExcerptPostId
		{
			get
			{
				return this._ExcerptPostId;
			}
			set
			{
				if ((this._ExcerptPostId != value))
				{
					this.OnExcerptPostIdChanging(value);
					this.SendPropertyChanging();
					this._ExcerptPostId = value;
					this.SendPropertyChanged("ExcerptPostId");
					this.OnExcerptPostIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WikiPostId", DbType="Int")]
		public System.Nullable<int> WikiPostId
		{
			get
			{
				return this._WikiPostId;
			}
			set
			{
				if ((this._WikiPostId != value))
				{
					this.OnWikiPostIdChanging(value);
					this.SendPropertyChanging();
					this._WikiPostId = value;
					this.SendPropertyChanged("WikiPostId");
					this.OnWikiPostIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Post_Tag", Storage="_Post", ThisKey="Id", OtherKey="Id", IsForeignKey=true)]
		public Post Post
		{
			get
			{
				return this._Post.Entity;
			}
			set
			{
				Post previousValue = this._Post.Entity;
				if (((previousValue != value) 
							|| (this._Post.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Post.Entity = null;
						previousValue.Tag = null;
					}
					this._Post.Entity = value;
					if ((value != null))
					{
						value.Tag = this;
						this._Id = value.Id;
					}
					else
					{
						this._Id = default(int);
					}
					this.SendPropertyChanged("Post");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TagSynonyms")]
	public partial class TagSynonym : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _SourceTagName;
		
		private string _TargetTagName;
		
		private System.Nullable<System.DateTime> _CreationDate;
		
		private System.Nullable<int> _OwnerUserId;
		
		private System.Nullable<int> _AutoRenameCount;
		
		private System.Nullable<System.DateTime> _LastAutoRename;
		
		private System.Nullable<int> _Score;
		
		private System.Nullable<int> _AprrovedByUserId;
		
		private System.Nullable<System.DateTime> _ApprovalDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSourceTagNameChanging(string value);
    partial void OnSourceTagNameChanged();
    partial void OnTargetTagNameChanging(string value);
    partial void OnTargetTagNameChanged();
    partial void OnCreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreationDateChanged();
    partial void OnOwnerUserIdChanging(System.Nullable<int> value);
    partial void OnOwnerUserIdChanged();
    partial void OnAutoRenameCountChanging(System.Nullable<int> value);
    partial void OnAutoRenameCountChanged();
    partial void OnLastAutoRenameChanging(System.Nullable<System.DateTime> value);
    partial void OnLastAutoRenameChanged();
    partial void OnScoreChanging(System.Nullable<int> value);
    partial void OnScoreChanged();
    partial void OnAprrovedByUserIdChanging(System.Nullable<int> value);
    partial void OnAprrovedByUserIdChanged();
    partial void OnApprovalDateChanging(System.Nullable<System.DateTime> value);
    partial void OnApprovalDateChanged();
    #endregion
		
		public TagSynonym()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceTagName", DbType="NVarChar(25)")]
		public string SourceTagName
		{
			get
			{
				return this._SourceTagName;
			}
			set
			{
				if ((this._SourceTagName != value))
				{
					this.OnSourceTagNameChanging(value);
					this.SendPropertyChanging();
					this._SourceTagName = value;
					this.SendPropertyChanged("SourceTagName");
					this.OnSourceTagNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetTagName", DbType="NVarChar(25)")]
		public string TargetTagName
		{
			get
			{
				return this._TargetTagName;
			}
			set
			{
				if ((this._TargetTagName != value))
				{
					this.OnTargetTagNameChanging(value);
					this.SendPropertyChanging();
					this._TargetTagName = value;
					this.SendPropertyChanged("TargetTagName");
					this.OnTargetTagNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerUserId", DbType="Int")]
		public System.Nullable<int> OwnerUserId
		{
			get
			{
				return this._OwnerUserId;
			}
			set
			{
				if ((this._OwnerUserId != value))
				{
					this.OnOwnerUserIdChanging(value);
					this.SendPropertyChanging();
					this._OwnerUserId = value;
					this.SendPropertyChanged("OwnerUserId");
					this.OnOwnerUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutoRenameCount", DbType="Int")]
		public System.Nullable<int> AutoRenameCount
		{
			get
			{
				return this._AutoRenameCount;
			}
			set
			{
				if ((this._AutoRenameCount != value))
				{
					this.OnAutoRenameCountChanging(value);
					this.SendPropertyChanging();
					this._AutoRenameCount = value;
					this.SendPropertyChanged("AutoRenameCount");
					this.OnAutoRenameCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastAutoRename", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastAutoRename
		{
			get
			{
				return this._LastAutoRename;
			}
			set
			{
				if ((this._LastAutoRename != value))
				{
					this.OnLastAutoRenameChanging(value);
					this.SendPropertyChanging();
					this._LastAutoRename = value;
					this.SendPropertyChanged("LastAutoRename");
					this.OnLastAutoRenameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Score", DbType="Int")]
		public System.Nullable<int> Score
		{
			get
			{
				return this._Score;
			}
			set
			{
				if ((this._Score != value))
				{
					this.OnScoreChanging(value);
					this.SendPropertyChanging();
					this._Score = value;
					this.SendPropertyChanged("Score");
					this.OnScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AprrovedByUserId", DbType="Int")]
		public System.Nullable<int> AprrovedByUserId
		{
			get
			{
				return this._AprrovedByUserId;
			}
			set
			{
				if ((this._AprrovedByUserId != value))
				{
					this.OnAprrovedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._AprrovedByUserId = value;
					this.SendPropertyChanged("AprrovedByUserId");
					this.OnAprrovedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovalDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ApprovalDate
		{
			get
			{
				return this._ApprovalDate;
			}
			set
			{
				if ((this._ApprovalDate != value))
				{
					this.OnApprovalDateChanging(value);
					this.SendPropertyChanging();
					this._ApprovalDate = value;
					this.SendPropertyChanged("ApprovalDate");
					this.OnApprovalDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _Reputation;
		
		private System.Nullable<System.DateTime> _CreationDate;
		
		private string _DisplayName;
		
		private System.Nullable<System.DateTime> _LastAccessDate;
		
		private string _PublicProfileUrl;
		
		private string _PicLocation;
		
		private string _UserUniqueid;
		
		private System.Nullable<int> _Views;
		
		private System.Nullable<int> _UpVotes;
		
		private System.Nullable<int> _DownVotes;
		
		private System.Nullable<System.Guid> _SessionKey;
		
		private EntityRef<Badge> _Badge;
		
		private EntitySet<PostHistory> _PostHistories;
		
		private EntitySet<Post> _Posts;
		
		private EntitySet<Post> _Posts1;
		
		private EntitySet<Vote> _Votes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnReputationChanging(System.Nullable<int> value);
    partial void OnReputationChanged();
    partial void OnCreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreationDateChanged();
    partial void OnDisplayNameChanging(string value);
    partial void OnDisplayNameChanged();
    partial void OnLastAccessDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastAccessDateChanged();
    partial void OnPublicProfileUrlChanging(string value);
    partial void OnPublicProfileUrlChanged();
    partial void OnPicLocationChanging(string value);
    partial void OnPicLocationChanged();
    partial void OnUserUniqueidChanging(string value);
    partial void OnUserUniqueidChanged();
    partial void OnViewsChanging(System.Nullable<int> value);
    partial void OnViewsChanged();
    partial void OnUpVotesChanging(System.Nullable<int> value);
    partial void OnUpVotesChanged();
    partial void OnDownVotesChanging(System.Nullable<int> value);
    partial void OnDownVotesChanged();
    partial void OnSessionKeyChanging(System.Nullable<System.Guid> value);
    partial void OnSessionKeyChanged();
    #endregion
		
		public User()
		{
			this._Badge = default(EntityRef<Badge>);
			this._PostHistories = new EntitySet<PostHistory>(new Action<PostHistory>(this.attach_PostHistories), new Action<PostHistory>(this.detach_PostHistories));
			this._Posts = new EntitySet<Post>(new Action<Post>(this.attach_Posts), new Action<Post>(this.detach_Posts));
			this._Posts1 = new EntitySet<Post>(new Action<Post>(this.attach_Posts1), new Action<Post>(this.detach_Posts1));
			this._Votes = new EntitySet<Vote>(new Action<Vote>(this.attach_Votes), new Action<Vote>(this.detach_Votes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reputation", DbType="Int")]
		public System.Nullable<int> Reputation
		{
			get
			{
				return this._Reputation;
			}
			set
			{
				if ((this._Reputation != value))
				{
					this.OnReputationChanging(value);
					this.SendPropertyChanging();
					this._Reputation = value;
					this.SendPropertyChanged("Reputation");
					this.OnReputationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="NVarChar(40)")]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this.OnDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._DisplayName = value;
					this.SendPropertyChanged("DisplayName");
					this.OnDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastAccessDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastAccessDate
		{
			get
			{
				return this._LastAccessDate;
			}
			set
			{
				if ((this._LastAccessDate != value))
				{
					this.OnLastAccessDateChanging(value);
					this.SendPropertyChanging();
					this._LastAccessDate = value;
					this.SendPropertyChanged("LastAccessDate");
					this.OnLastAccessDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublicProfileUrl", DbType="NVarChar(200)")]
		public string PublicProfileUrl
		{
			get
			{
				return this._PublicProfileUrl;
			}
			set
			{
				if ((this._PublicProfileUrl != value))
				{
					this.OnPublicProfileUrlChanging(value);
					this.SendPropertyChanging();
					this._PublicProfileUrl = value;
					this.SendPropertyChanged("PublicProfileUrl");
					this.OnPublicProfileUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PicLocation", DbType="NVarChar(500)")]
		public string PicLocation
		{
			get
			{
				return this._PicLocation;
			}
			set
			{
				if ((this._PicLocation != value))
				{
					this.OnPicLocationChanging(value);
					this.SendPropertyChanging();
					this._PicLocation = value;
					this.SendPropertyChanged("PicLocation");
					this.OnPicLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserUniqueid", DbType="NVarChar(32)")]
		public string UserUniqueid
		{
			get
			{
				return this._UserUniqueid;
			}
			set
			{
				if ((this._UserUniqueid != value))
				{
					this.OnUserUniqueidChanging(value);
					this.SendPropertyChanging();
					this._UserUniqueid = value;
					this.SendPropertyChanged("UserUniqueid");
					this.OnUserUniqueidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Views", DbType="Int")]
		public System.Nullable<int> Views
		{
			get
			{
				return this._Views;
			}
			set
			{
				if ((this._Views != value))
				{
					this.OnViewsChanging(value);
					this.SendPropertyChanging();
					this._Views = value;
					this.SendPropertyChanged("Views");
					this.OnViewsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpVotes", DbType="Int")]
		public System.Nullable<int> UpVotes
		{
			get
			{
				return this._UpVotes;
			}
			set
			{
				if ((this._UpVotes != value))
				{
					this.OnUpVotesChanging(value);
					this.SendPropertyChanging();
					this._UpVotes = value;
					this.SendPropertyChanged("UpVotes");
					this.OnUpVotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DownVotes", DbType="Int")]
		public System.Nullable<int> DownVotes
		{
			get
			{
				return this._DownVotes;
			}
			set
			{
				if ((this._DownVotes != value))
				{
					this.OnDownVotesChanging(value);
					this.SendPropertyChanging();
					this._DownVotes = value;
					this.SendPropertyChanged("DownVotes");
					this.OnDownVotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionKey", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> SessionKey
		{
			get
			{
				return this._SessionKey;
			}
			set
			{
				if ((this._SessionKey != value))
				{
					this.OnSessionKeyChanging(value);
					this.SendPropertyChanging();
					this._SessionKey = value;
					this.SendPropertyChanged("SessionKey");
					this.OnSessionKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Badge", Storage="_Badge", ThisKey="Id", OtherKey="Id", IsUnique=true, IsForeignKey=false)]
		public Badge Badge
		{
			get
			{
				return this._Badge.Entity;
			}
			set
			{
				Badge previousValue = this._Badge.Entity;
				if (((previousValue != value) 
							|| (this._Badge.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Badge.Entity = null;
						previousValue.User = null;
					}
					this._Badge.Entity = value;
					if ((value != null))
					{
						value.User = this;
					}
					this.SendPropertyChanged("Badge");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_PostHistory", Storage="_PostHistories", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<PostHistory> PostHistories
		{
			get
			{
				return this._PostHistories;
			}
			set
			{
				this._PostHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Post", Storage="_Posts", ThisKey="Id", OtherKey="LastEditorUserId")]
		public EntitySet<Post> Posts
		{
			get
			{
				return this._Posts;
			}
			set
			{
				this._Posts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Post1", Storage="_Posts1", ThisKey="Id", OtherKey="OwnerUserId")]
		public EntitySet<Post> Posts1
		{
			get
			{
				return this._Posts1;
			}
			set
			{
				this._Posts1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Vote", Storage="_Votes", ThisKey="Id", OtherKey="VoterId")]
		public EntitySet<Vote> Votes
		{
			get
			{
				return this._Votes;
			}
			set
			{
				this._Votes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PostHistories(PostHistory entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_PostHistories(PostHistory entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Posts(Post entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Posts(Post entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Posts1(Post entity)
		{
			this.SendPropertyChanging();
			entity.User1 = this;
		}
		
		private void detach_Posts1(Post entity)
		{
			this.SendPropertyChanging();
			entity.User1 = null;
		}
		
		private void attach_Votes(Vote entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Votes(Vote entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Votes")]
	public partial class Vote : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _PostId;
		
		private System.Nullable<int> _VoteTypeId;
		
		private System.Nullable<System.DateTime> _CreationDate;
		
		private System.Nullable<int> _BountyAmount;
		
		private System.Nullable<int> _VoterId;
		
		private EntityRef<Post> _Post;
		
		private EntityRef<User> _User;
		
		private EntityRef<VoteType> _VoteType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPostIdChanging(System.Nullable<int> value);
    partial void OnPostIdChanged();
    partial void OnVoteTypeIdChanging(System.Nullable<int> value);
    partial void OnVoteTypeIdChanged();
    partial void OnCreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreationDateChanged();
    partial void OnBountyAmountChanging(System.Nullable<int> value);
    partial void OnBountyAmountChanged();
    partial void OnVoterIdChanging(System.Nullable<int> value);
    partial void OnVoterIdChanged();
    #endregion
		
		public Vote()
		{
			this._Post = default(EntityRef<Post>);
			this._User = default(EntityRef<User>);
			this._VoteType = default(EntityRef<VoteType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostId", DbType="Int")]
		public System.Nullable<int> PostId
		{
			get
			{
				return this._PostId;
			}
			set
			{
				if ((this._PostId != value))
				{
					if (this._Post.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPostIdChanging(value);
					this.SendPropertyChanging();
					this._PostId = value;
					this.SendPropertyChanged("PostId");
					this.OnPostIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoteTypeId", DbType="Int")]
		public System.Nullable<int> VoteTypeId
		{
			get
			{
				return this._VoteTypeId;
			}
			set
			{
				if ((this._VoteTypeId != value))
				{
					if (this._VoteType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVoteTypeIdChanging(value);
					this.SendPropertyChanging();
					this._VoteTypeId = value;
					this.SendPropertyChanged("VoteTypeId");
					this.OnVoteTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BountyAmount", DbType="Int")]
		public System.Nullable<int> BountyAmount
		{
			get
			{
				return this._BountyAmount;
			}
			set
			{
				if ((this._BountyAmount != value))
				{
					this.OnBountyAmountChanging(value);
					this.SendPropertyChanging();
					this._BountyAmount = value;
					this.SendPropertyChanged("BountyAmount");
					this.OnBountyAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoterId", DbType="Int")]
		public System.Nullable<int> VoterId
		{
			get
			{
				return this._VoterId;
			}
			set
			{
				if ((this._VoterId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVoterIdChanging(value);
					this.SendPropertyChanging();
					this._VoterId = value;
					this.SendPropertyChanged("VoterId");
					this.OnVoterIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Post_Vote", Storage="_Post", ThisKey="PostId", OtherKey="Id", IsForeignKey=true)]
		public Post Post
		{
			get
			{
				return this._Post.Entity;
			}
			set
			{
				Post previousValue = this._Post.Entity;
				if (((previousValue != value) 
							|| (this._Post.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Post.Entity = null;
						previousValue.Votes.Remove(this);
					}
					this._Post.Entity = value;
					if ((value != null))
					{
						value.Votes.Add(this);
						this._PostId = value.Id;
					}
					else
					{
						this._PostId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Post");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Vote", Storage="_User", ThisKey="VoterId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Votes.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Votes.Add(this);
						this._VoterId = value.Id;
					}
					else
					{
						this._VoterId = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VoteType_Vote", Storage="_VoteType", ThisKey="VoteTypeId", OtherKey="Id", IsForeignKey=true)]
		public VoteType VoteType
		{
			get
			{
				return this._VoteType.Entity;
			}
			set
			{
				VoteType previousValue = this._VoteType.Entity;
				if (((previousValue != value) 
							|| (this._VoteType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VoteType.Entity = null;
						previousValue.Votes.Remove(this);
					}
					this._VoteType.Entity = value;
					if ((value != null))
					{
						value.Votes.Add(this);
						this._VoteTypeId = value.Id;
					}
					else
					{
						this._VoteTypeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("VoteType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VoteTypes")]
	public partial class VoteType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private EntitySet<PostFeedback> _PostFeedbacks;
		
		private EntitySet<Vote> _Votes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public VoteType()
		{
			this._PostFeedbacks = new EntitySet<PostFeedback>(new Action<PostFeedback>(this.attach_PostFeedbacks), new Action<PostFeedback>(this.detach_PostFeedbacks));
			this._Votes = new EntitySet<Vote>(new Action<Vote>(this.attach_Votes), new Action<Vote>(this.detach_Votes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(40)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VoteType_PostFeedback", Storage="_PostFeedbacks", ThisKey="Id", OtherKey="VoteTypeId")]
		public EntitySet<PostFeedback> PostFeedbacks
		{
			get
			{
				return this._PostFeedbacks;
			}
			set
			{
				this._PostFeedbacks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VoteType_Vote", Storage="_Votes", ThisKey="Id", OtherKey="VoteTypeId")]
		public EntitySet<Vote> Votes
		{
			get
			{
				return this._Votes;
			}
			set
			{
				this._Votes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PostFeedbacks(PostFeedback entity)
		{
			this.SendPropertyChanging();
			entity.VoteType = this;
		}
		
		private void detach_PostFeedbacks(PostFeedback entity)
		{
			this.SendPropertyChanging();
			entity.VoteType = null;
		}
		
		private void attach_Votes(Vote entity)
		{
			this.SendPropertyChanging();
			entity.VoteType = this;
		}
		
		private void detach_Votes(Vote entity)
		{
			this.SendPropertyChanging();
			entity.VoteType = null;
		}
	}
}
#pragma warning restore 1591
